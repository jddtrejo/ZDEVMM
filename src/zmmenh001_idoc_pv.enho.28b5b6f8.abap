"Name: \PR:SAPLVKOI\FO:FILL_APPL_STRUCTURES\SE:END\EI
ENHANCEMENT 0 ZMMENH001_IDOC_PV.
*
    " Validacion de Margen de Precio de Venta.
    DATA: V_KBETR TYPE KBETR,
          O_KBETR TYPE KBETR,
          V_LEN TYPE I,
          V_STR(15) TYPE C,
          V_EKPNN TYPE CALP-EKPNN,
          MARGEN TYPE P DECIMALS 2,
          V_MATKL TYPE ZMARGEN_GPOART-GPOAR,
          WA_MARGEN TYPE ZMARGEN_GPOART,
          XARBFELD(15) TYPE C,
          MESID TYPE C,
          MESS TYPE ZDATA,
          RETCODE TYPE  CHAR1,
          P_DATE TYPE  BUDAT,
          MESSAGE TYPE  BAPI_MSG,
          V_WERKS TYPE MARD-WERKS,
          V_MTART TYPE MTART,
          V_LIFNR TYPE LIFNR,
    BEGIN OF TVARVC OCCURS 0.
      INCLUDE STRUCTURE TVARVC.
    DATA: END OF TVARVC..

    DATA:    P_TIME TYPE T VALUE '000002',
          L_HORA TYPE T,
          L_FECHA TYPE D.
    DATA:    L_NUMERO(8).
    DATA:    L_JOBNAME TYPE BTCJOB.

    CONSTANTS: SI TYPE C VALUE 'X'.

    RANGES: R_WERKS FOR V_WERKS.

*  IF SY-TCODE EQ 'LSMW'.
    DATA:    TARGETSERVER LIKE BTCTGTSRVR-SRVNAME.
    CLEAR TARGETSERVER.
    SELECT SINGLE *
    FROM TVARVC
    WHERE NAME EQ 'ZDSMMRE334_SERVER'
    AND TYPE EQ 'P' .
    IF SY-SUBRC EQ 0.
      MOVE TVARVC-LOW TO TARGETSERVER.
    ENDIF.


    SELECT SINGLE MTART FROM MARA
    INTO V_MTART
    WHERE MATNR EQ S_E1KOMG-MATNR.

    CHECK S_E1KOMG-KSCHL EQ 'VKP0'. " 18.06.2014 JPM 3300 VALIDACION SOLO PARA VKP0
    CHECK V_MTART EQ 'ZMER'. " 10.04.2014 JPM VALIDACION SOLO PARA ZMER
    CHECK T_KONP-KBETR NE 0 OR T_KONP-KBETR IS NOT INITIAL.

    CLEAR: T_IDOC_STATUS-MSGV1,
    T_IDOC_STATUS-MSGV2,
    T_IDOC_STATUS-MSGV3,
    T_IDOC_STATUS-MSGV4.
    "VALIDA SI GRUPO DE ARTICULO ESTA CATALOGADO
    SELECT SINGLE MATKL INTO V_MATKL
    FROM MARA
    WHERE MATNR EQ S_E1KOMG-MATNR.

    SELECT SINGLE * FROM ZMARGEN_GPOART
    INTO WA_MARGEN
    WHERE GPOAR EQ V_MATKL.

    IF SY-SUBRC EQ 0.

      MOVE T_KONP-KBETR TO XARBFELD.
      REPLACE ALL OCCURRENCES OF '.' IN XARBFELD WITH ''.
      REPLACE ALL OCCURRENCES OF ',' IN XARBFELD WITH ''.
      CONDENSE XARBFELD NO-GAPS.

      "OBTIENE PROVEEDOR
      SELECT SINGLE LIFNR INTO V_LIFNR
      FROM EINA
      WHERE MATNR EQ S_E1KOMG-MATNR
      AND RELIF EQ 'X'.
      IF SY-SUBRC NE 0.
        SELECT LIFNR INTO V_LIFNR
        FROM EINA
        WHERE MATNR EQ S_E1KOMG-MATNR.
        ENDSELECT.
      ENDIF.


      IF S_E1KOMG-KUNNR IS INITIAL.
        MOVE '1101' TO V_WERKS.
      ELSE.
        MOVE S_E1KOMG-VAKEY+6(4) TO V_WERKS.
      ENDIF.

      CALL FUNCTION 'ZOBTIENE_COSTO_CON_DESCUENTOS'
      EXPORTING
        MATNR   = S_E1KOMG-MATNR
        LIFNR   = V_LIFNR
        WERKS   = V_WERKS
        ARBFELD = XARBFELD
      IMPORTING
        EKPNN   = V_EKPNN
        KBETR   = O_KBETR
        MESID   = MESID
        MESS    = MESS.

      "OBTIENE MARGEN.
      IF O_KBETR > 0.
*        MARGEN =  ( ( ( O_KBETR - V_EKPNN ) * 100 ) / O_KBETR ) * 100.
        MARGEN =  ( ( O_KBETR - V_EKPNN ) / O_KBETR ) * 100.
      ENDIF.

      IF MARGEN GE WA_MARGEN-MAINI AND MARGEN LE WA_MARGEN-MAFIN.
*        "VALIDA SI TIENE INVENTARIO
*        FREE: R_WERKS.
*        MOVE: 'I' TO R_WERKS-SIGN,
*        'CP' TO R_WERKS-OPTION,
*        'CC*' TO R_WERKS-LOW.
*        APPEND R_WERKS.
*        MOVE: '1*' TO R_WERKS-LOW.
*        APPEND R_WERKS.
*        MOVE: '2*' TO R_WERKS-LOW.
*        APPEND R_WERKS.
*
*        SELECT SINGLE WERKS FROM MARD INTO V_WERKS
*        WHERE MATNR EQ S_E1KOMG-MATNR
*        AND WERKS IN R_WERKS
*        AND LGORT EQ 'A001'
*        AND LABST GT 0.
*        IF SY-SUBRC EQ 0.
*          SET PARAMETER ID 'ZMPV1' FIELD SI.
*          GET TIME.
*
*          CALL FUNCTION 'C14B_ADD_TIME'
*          EXPORTING
*            I_STARTTIME = SY-UZEIT
*            I_STARTDATE = SY-DATUM
*            I_ADDTIME   = P_TIME
*          IMPORTING
*            E_ENDTIME   = L_HORA
*            E_ENDDATE   = L_FECHA.
*
*          CONCATENATE 'VKU10 IDOC' S_E1KOMG-MATNR
*          INTO L_JOBNAME SEPARATED BY SPACE.
**-----------------------------------------------+
** FUNCION DE EJECUCION EN FONDO PARA IDOC DISTRO|
**-----------------------------------------------+
*          CALL FUNCTION 'JOB_OPEN'
*          EXPORTING
*            JOBNAME          = L_JOBNAME
*            SDLSTRTDT        = L_FECHA
*            SDLSTRTTM        = L_HORA
*          IMPORTING
*            JOBCOUNT         = L_NUMERO
*          EXCEPTIONS
*            CANT_CREATE_JOB  = 1
*            INVALID_JOB_DATA = 2
*            JOBNAME_MISSING  = 3
*            OTHERS           = 4.
*
*          SUBMIT ZDSMMRE001_MPV1 AND RETURN
*          WITH P_MATNR = S_E1KOMG-MATNR
*          VIA JOB L_JOBNAME NUMBER L_NUMERO.
*
*          CALL FUNCTION 'JOB_CLOSE'
*          EXPORTING
*            JOBCOUNT             = L_NUMERO
*            JOBNAME              = L_JOBNAME
*            SDLSTRTDT            = L_FECHA
*            SDLSTRTTM            = L_HORA
*            TARGETSERVER         = TARGETSERVER
*          EXCEPTIONS
*            CANT_START_IMMEDIATE = 1
*            INVALID_STARTDATE    = 2
*            JOBNAME_MISSING      = 3
*            JOB_CLOSE_FAILED     = 4
*            JOB_NOSTEPS          = 5
*            JOB_NOTEX            = 6
*            LOCK_FAILED          = 7
*            OTHERS               = 8.
*        ENDIF.
        "CONTINUA PROCESO
      ELSE.
*        MESSAGE 'PRECIO DE VENTA FUERA DE MARGEN ESTABLECIDO.' TYPE 'E'.
        T_IDOC_STATUS-STATUS = C_IDOC_STATUS_ERROR.
        T_IDOC_STATUS-MSGID  = 'ZMM01'.
        T_IDOC_STATUS-MSGNO  = '009'.
        T_IDOC_STATUS-MSGTY  = 'E'.
        APPEND T_IDOC_STATUS.
        SUBRC = 1.
      ENDIF.
    ELSE.
*      MESSAGE 'GRUPO ARTICULO NO CATALOGADO EN ZMARGEN_GPOART' TYPE 'E'.
      T_IDOC_STATUS-STATUS = C_IDOC_STATUS_ERROR.
      T_IDOC_STATUS-MSGID  = 'ZMM01'.
      T_IDOC_STATUS-MSGNO  = '008'.
      T_IDOC_STATUS-MSGTY  = 'E'.
      T_IDOC_STATUS-MSGV1  = V_MATKL.
      APPEND T_IDOC_STATUS.
      SUBRC = 1.
    ENDIF.
*  ENDIF.
ENDENHANCEMENT.
